{"version":3,"sources":["../../app/attachers/mongodb.js"],"names":["module","exports","MongoDB","create","queue_name","schema_name","current_service","service_to","schema","amqp","options","Error","_attachToAmqp","update","delete","_sendToAmqp","doc","actions","send","method","self","Promise","resolve","pre","next","wasNew","isNew","post","replace","_populator","_depopulator","_getCurrentServiceToOptions","each","populate","value","execPopulate","field_to_populate","depopulate","data","filter","isPlainObject","name"],"mappings":"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","file":"mongodb.js","sourcesContent":["// const Bind = require('./bind.js')\r\nimport Bind from './bind.js'\r\nimport _ from 'lodash'\r\n\r\nmodule.exports = class MongoDB extends Bind{\r\n    \r\n    create(queue_name, schema_name, current_service, service_to, schema, amqp, options){\r\n        \r\n        if(!queue_name){\r\n            throw new Error('queue_name is not defined')\r\n        }\r\n        \r\n        if(!schema_name){\r\n            throw new Error('schema_name is not defined')\r\n        }\r\n        \r\n        if(!current_service){\r\n            throw new Error('current_service is not defined')\r\n        }\r\n        \r\n        if(!service_to){\r\n            throw new Error('service_to is not defined')\r\n        }\r\n        \r\n        if(!schema){\r\n            throw new Error('schema is not defined')\r\n        }\r\n        \r\n        if(!amqp){\r\n            throw new Error('amqp is not defined')\r\n        }\r\n        \r\n        return this._attachToAmqp(queue_name, schema_name, current_service, service_to, schema, amqp, options, 'save')\r\n    }\r\n    \r\n    update(queue_name, schema_name, current_service, service_to, schema, amqp, options){\r\n        \r\n        if(!queue_name){\r\n            throw new Error('queue_name is not defined')\r\n        }\r\n        \r\n        if(!schema_name){\r\n            throw new Error('schema_name is not defined')\r\n        }\r\n        \r\n        if(!current_service){\r\n            throw new Error('current_service is not defined')\r\n        }\r\n        \r\n        if(!service_to){\r\n            throw new Error('service_to is not defined')\r\n        }\r\n        \r\n        if(!schema){\r\n            throw new Error('schema is not defined')\r\n        }\r\n        \r\n        if(!amqp){\r\n            throw new Error('amqp is not defined')\r\n        }\r\n        \r\n        return this._attachToAmqp(queue_name, schema_name, current_service, service_to, schema, amqp, options, 'update')\r\n    }\r\n    \r\n    delete(queue_name, schema_name, current_service, service_to, schema, amqp, options){\r\n        \r\n        if(!queue_name){\r\n            throw new Error('queue_name is not defined')\r\n        }\r\n        \r\n        if(!schema_name){\r\n            throw new Error('schema_name is not defined')\r\n        }\r\n        \r\n        if(!current_service){\r\n            throw new Error('current_service is not defined')\r\n        }\r\n        \r\n        if(!service_to){\r\n            throw new Error('service_to is not defined')\r\n        }\r\n        \r\n        if(!schema){\r\n            throw new Error('schema is not defined')\r\n        }\r\n        \r\n        if(!amqp){\r\n            throw new Error('amqp is not defined')\r\n        }\r\n        \r\n        return this._attachToAmqp(queue_name, schema_name, current_service, service_to, schema, amqp, options, 'remove')\r\n    }\r\n    \r\n    async _sendToAmqp(amqp, queue_name, doc){\r\n        \r\n        if(!amqp){\r\n            throw new Error('amqp is not defined')\r\n        }\r\n        \r\n        if(!queue_name){\r\n            throw new Error('queue_name is not defined')\r\n        }\r\n        \r\n        if(!doc){\r\n            throw new Error('doc is not defined')\r\n        }\r\n        \r\n        await amqp.actions.send(queue_name, doc);\r\n    }\r\n    \r\n    _attachToAmqp(queue_name, schema_name, current_service, service_to, schema, amqp, options, method){\r\n        \r\n        if(!queue_name){\r\n            throw new Error('queue_name is not defined')\r\n        }\r\n        \r\n        if(!schema_name){\r\n            throw new Error('schema_name is not defined')\r\n        }\r\n        \r\n        if(!current_service){\r\n            throw new Error('current_service is not defined')\r\n        }\r\n        \r\n        if(!service_to){\r\n            throw new Error('service_to is not defined')\r\n        }\r\n        \r\n        if(!schema){\r\n            throw new Error('schema is not defined')\r\n        }\r\n        \r\n        if(!amqp){\r\n            throw new Error('amqp is not defined')\r\n        }\r\n        \r\n        if(!method){\r\n            throw new Error('method is not defined')\r\n        }\r\n        \r\n        let self = this;\r\n        return new Promise(async (resolve)=>{\r\n            if(method == 'save'){\r\n                schema.pre('save', function (next) {\r\n                    this.wasNew = this.isNew;\r\n                    next();\r\n                });\r\n            }\r\n            schema.post(method, async function(doc, next){\r\n                if(!doc.wasNew && method == 'save'){\r\n                    queue_name = queue_name.replace('create_', 'update_')\r\n                }\r\n                await self._populator(doc, options, service_to)\r\n                await self._sendToAmqp(amqp, queue_name, doc)\r\n                await self._depopulator(doc, options, service_to);\r\n                \r\n                next();\r\n                resolve();\r\n            })\r\n        })\r\n    }\r\n    \r\n    async _populator(doc, options, service_to){\r\n        \r\n        if(!doc){\r\n            throw new Error('doc is not defined');\r\n        }\r\n        \r\n        if(!service_to){\r\n            throw new Error('service_to is not defined')\r\n        }\r\n        \r\n        options = this._getCurrentServiceToOptions(options, service_to);\r\n        \r\n        if(options){\r\n            _.each(options.populate, async value=>{\r\n                await doc.populate(value)\r\n            })\r\n            await doc.execPopulate();\r\n        }\r\n    }\r\n    \r\n    async _depopulator(doc, options, service_to){\r\n        \r\n        if(!doc){\r\n            throw new Error('doc is not defined');\r\n        }\r\n        \r\n        if(!service_to){\r\n            throw new Error('service_to is not defined')\r\n        }\r\n        \r\n        options = this._getCurrentServiceToOptions(options, service_to);\r\n        \r\n        if(options){\r\n            _.each(options.populate, async field_to_populate=>{\r\n                await doc.depopulate(field_to_populate)\r\n            })\r\n        }\r\n    }\r\n    \r\n    _getCurrentServiceToOptions(options, service_to){\r\n\r\n        if(!service_to){\r\n            throw new Error('service_to is not defined')\r\n        }\r\n\r\n        let data =  _(options)\r\n        .filter(_.isPlainObject)\r\n        .filter(value => value.populate)\r\n        .filter(value => value.name == service_to)\r\n        .value()[0]\r\n        if(data){\r\n            return data\r\n        }else{\r\n            return null\r\n        }\r\n    }\r\n    \r\n}"]}