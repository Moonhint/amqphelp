{"version":3,"sources":["../../app/helpers/util.helper.js"],"names":["MessagingUtil","constructor","sleep","time_sleep","message","process","env","NODE_ENV","console","info","npm_package_name","Promise","resolve","reject","setTimeout","e"],"mappings":";;;;;AAAO,MAAMA,aAAN,CAAoB;;AAEzB;AACAC,cAAY,KAAK,EAAjB,EAAqB;AACnB;AACD;;AAEDC,QAAOC,aAAW,KAAlB,EAAyBC,OAAzB,EAAiC;AAC/B,QAAKC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,MAA1B,IAAqCH,OAAzC,EAAkDI,QAAQC,IAAR,CAAc,GAAEJ,QAAQC,GAAR,CAAYI,gBAAiB,KAAIN,OAAQ,OAAMD,UAAW,KAA1E;AAClD,WAAO,IAAIQ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AACpC,UAAI;AACFC,mBAAW,YAAY;AACrBF;AACD,SAFD,EAEGT,UAFH;AAGD,OAJD,CAIE,OAAOY,CAAP,EAAU;AACV,cAAMA,CAAN;AACD;AACF,KARM,CAAP;AASD;;AAlBwB,C,QAAdf,a,GAAAA,a;AAoBZ","file":"util.helper.js","sourcesContent":["export class MessagingUtil {\r\n\r\n  // Depedency Injection:\r\n  constructor({} = {}) {\r\n    // a service for handling AMQP channel creation\r\n  }\r\n\r\n  sleep (time_sleep=10000, message){\r\n    if ((process.env.NODE_ENV !== \"test\") && message) console.info(`${process.env.npm_package_name}: ${message} in ${time_sleep} ms`)\r\n    return new Promise((resolve, reject)=>{\r\n      try {\r\n        setTimeout(function () {\r\n          resolve();\r\n        }, time_sleep);\r\n      } catch (e) {\r\n        throw e;\r\n      }\r\n    });\r\n  }\r\n\r\n};\r\n"]}